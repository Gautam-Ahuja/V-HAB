function [Time,CO2] = importCO2file(filename, startRow, endRow)
% IMPORTCO2FILE: Import data from COSIR CO2 Sensor Data Files
%   [TIME,CO2] = IMPORTCO2FILE(FILENAME) Reads data from text file FILENAME
%   for the default selection.
%
%   [TIME,CO2] = IMPORTCO2FILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   [Time,CO2] = importCO2file('March-04-2017 - Upstream.csv',3, 606);
%
%    See also TEXTSCAN.
%
%   Time:           DateTime        [hh:mm:ss]
%   TimeNum:        Minutes since Start
%   CO2:            CO2 content     [PPM]

% Auto-generated by MATLAB on 2017/03/06 16:24:44

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 3;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: datetimes (%{mm:ss.s}D)
%	column2: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%{MM/dd/YY HH:mm:ss.SSS}D%q%*s%[^\n\r]';
% formatSpec = '%{mm:ss.S}D%f%[^\n\r]'; % Works for March 4th data?

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Time        = dataArray{1};

% Neccessary for March 4th Data
% TimeVec     = datevec(Time);
% TimeNum     = TimeVec(:,5) + (TimeVec(:,6)/60);
% TimeNum     = unwrap(TimeNum);

CO2         = nan(length(dataArray{2}),1);
for i = 1:length(dataArray{2})
    CO2(i)  = str2double(dataArray{2}{i});
end

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% Time=datenum(Time);


